# Basic Nginx configuration for local development

server {
    listen 80;
    server_name localhost;

    # Docker's internal DNS resolver. This is crucial for Nginx to resolve
    # other service names (like supabase-kong) on the Docker network.
    resolver 127.0.0.11 valid=30s;

    # Define a variable for the Supabase Kong upstream.
    # This helps delay DNS resolution until request time, which is more robust in Docker.
    set $supabase_kong_uri http://supabase-kong:8000;

    # Enable more logging for debugging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Optional: Increase client body size if needed for uploads
    # client_max_body_size 100M;

    # Location for the NEW Next.js frontend (frontend-2)
    # This will be the default for `/`
    location / {
        proxy_pass http://ghostly_frontend:3001; # Changed to Next.js app on port 3001
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (potentially needed for Next.js Fast Refresh)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Location for the backend API (FastAPI)
    # We proxy to the backend service defined in docker-compose.yml
    # which runs on port 8000 internally
    location /api {
        proxy_pass http://ghostly_backend:8000; # Use service name from docker-compose
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rewrite /api prefix as backend doesn't expect it
        rewrite /api/(.*) /$1 break;
    }

    # Supabase Auth Proxy - CORRECTED VERSION
    location /auth/v1/ {
        # Direct pass-through to Supabase Kong
        proxy_pass http://supabase-kong:8000/auth/v1/;
        
        # Critical: preserve query string parameters
        proxy_pass_request_headers on;
        
        # Explicit headers Supabase expects
        proxy_set_header Host supabase-kong;
        proxy_set_header apikey $http_apikey;
        proxy_set_header Authorization $http_authorization;
        
        # Forwarding headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        
        # Handle OPTIONS requests (CORS preflight)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Supabase REST API Proxy
    # Proxies requests for /rest/v1/... to the Supabase Kong gateway,
    # which then routes them to the PostgREST (REST API) service.
    location /rest/v1 {
        proxy_pass http://supabase-kong:8000/rest/v1;
        proxy_set_header Host supabase-kong;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header apikey $http_apikey; # Ensure the API key is forwarded
    }

    # Supabase Storage Proxy
    # Proxies requests for /storage/v1/... to the Supabase Kong gateway,
    # which then routes them to the Supabase Storage service.
    location /storage/v1 {
        proxy_pass http://supabase-kong:8000/storage/v1;
        proxy_set_header Host supabase-kong;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header apikey $http_apikey; # Ensure the API key is forwarded
    }

    # Supabase Realtime Proxy
    # Proxies requests for /realtime/v1/... to the Supabase Kong gateway,
    # which then routes them to the Supabase Realtime service.
    # WebSocket specific headers are included for proper WebSocket proxying.
    location /realtime/v1 {
        proxy_pass http://supabase-kong:8000/realtime/v1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host supabase-kong;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header apikey $http_apikey; # Ensure the API key is forwarded (might also be in query params for WS)
    }

    # Optional: Add security headers (consider moving to a separate conf file)
    # add_header X-Content-Type-Options nosniff;
    # add_header X-Frame-Options SAMEORIGIN;
    # add_header X-XSS-Protection "1; mode=block";

    # Optional: Access and error logs
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;
} 