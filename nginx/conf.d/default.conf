# Basic Nginx configuration for local development

server {
    listen 80;
    server_name localhost;

    # Docker's internal DNS resolver. This is crucial for Nginx to resolve
    # other service names (like supabase-kong) on the Docker network.
    resolver 127.0.0.11 valid=30s ipv6=off;

    # Define variables for the upstream services.
    # This helps delay DNS resolution until request time, which is more robust in Docker.
    set $frontend_uri http://ghostly_frontend:3001;  # Updated to port 3001 to match Dockerfile
    set $backend_uri http://ghostly_backend:8000;    # Updated to match docker-compose.yml
    set $supabase_kong_uri http://supabase-kong:8000;

    # Enable more logging for debugging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Increase client body size for uploads (useful for C3D files)
    client_max_body_size 100M;

    # Location for the frontend
    location / {
        proxy_pass $frontend_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support for Vite/React Hot Module Replacement
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 = @frontend_unavailable;
    }

    # Custom error handler for frontend unavailable
    location @frontend_unavailable {
        default_type text/html;
        return 502 '<!DOCTYPE html>
                    <html>
                    <head><title>Frontend Service Unavailable</title></head>
                    <body>
                        <h1>Frontend Service Unavailable</h1>
                        <p>The frontend service is not responding. Please check:</p>
                        <ul>
                            <li>Frontend service is running in Docker (container name: ghostly_frontend)</li>
                            <li>Service is running on port 3001 inside the container</li>
                            <li>Docker network is properly configured</li>
                        </ul>
                    </body>
                    </html>';
    }

    # Location for the backend API - pass through without rewriting
    location /api/ {
        proxy_pass $backend_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increased timeout for file uploads
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 = @backend_unavailable;
    }

    # Location for the v1 API path - direct pass to backend
    location /v1/ {
        proxy_pass $backend_uri;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Increased timeout for file uploads
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 = @backend_unavailable;
    }

    # Custom error handler for backend unavailable
    location @backend_unavailable {
        default_type text/html;
        return 502 '<!DOCTYPE html>
                    <html>
                    <head><title>Backend API Unavailable</title></head>
                    <body>
                        <h1>Backend API Service Unavailable</h1>
                        <p>The backend service is not responding. Please check:</p>
                        <ul>
                            <li>Backend service is running in Docker (container name: ghostly_backend)</li>
                            <li>Service is running on port 8000 inside the container</li>
                            <li>Docker network is properly configured</li>
                        </ul>
                    </body>
                    </html>';
    }

    # Supabase Auth Proxy
    location /auth/v1/ {
        # Direct pass-through to Supabase Kong
        proxy_pass $supabase_kong_uri/auth/v1/;
        
        # Critical: preserve query string parameters
        proxy_pass_request_headers on;
        
        # Explicit headers Supabase expects
        proxy_set_header Host supabase-kong;
        proxy_set_header apikey $http_apikey;
        proxy_set_header Authorization $http_authorization;
        
        # Forwarding headers
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Standard CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        
        # Handle OPTIONS requests (CORS preflight)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
            add_header 'Access-Control-Allow-Headers' '*';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Error handling
        proxy_intercept_errors on;
        error_page 502 = @supabase_unavailable;
    }

    # Custom error handler for Supabase unavailable
    location @supabase_unavailable {
        default_type text/html;
        return 502 '<!DOCTYPE html>
                    <html>
                    <head><title>Supabase Service Unavailable</title></head>
                    <body>
                        <h1>Supabase Service Unavailable</h1>
                        <p>The Supabase service is not responding. Please check:</p>
                        <ul>
                            <li>Supabase services are running in Docker</li>
                            <li>Service name and port are correct in Nginx config</li>
                            <li>Docker network is properly configured</li>
                        </ul>
                    </body>
                    </html>';
    }

    # Supabase REST API Proxy
    location /rest/v1 {
        proxy_pass $supabase_kong_uri/rest/v1;
        proxy_set_header Host supabase-kong;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header apikey $http_apikey;
    }

    # Supabase Storage Proxy
    location /storage/v1 {
        proxy_pass $supabase_kong_uri/storage/v1;
        proxy_set_header Host supabase-kong;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header apikey $http_apikey;
    }

    # Supabase Realtime Proxy
    location /realtime/v1 {
        proxy_pass $supabase_kong_uri/realtime/v1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host supabase-kong;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header apikey $http_apikey;
    }

    # Optional: Add security headers (consider moving to a separate conf file)
    # add_header X-Content-Type-Options nosniff;
    # add_header X-Frame-Options SAMEORIGIN;
    # add_header X-XSS-Protection "1; mode=block";

    # Optional: Access and error logs
    # access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log;
} 